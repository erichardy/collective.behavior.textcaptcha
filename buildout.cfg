[buildout]
extends = http://svn.plone.org/svn/collective/buildout/plonetest/test-4.x.cfg doc.cfg
develop = .
parts += 
    templer
    omelette
    code-analysis
    zopepy

versions = versions
package-name = collective.behavior.textcaptcha
package-extras = [test]

# extensions = 
#     mr.developer
# sources = sources
# auto-checkout =
#     collective.behavior.shortidfromlongtitle

# always-checkout = False

eggs += 
	plone.reload
	collective.zodbbrowser
    plone.reload
    Products.DocFinderTab
    collective.behavior.textcaptcha
    
#    aws.zope2zcmldoc
#	eea.facetednavigation

[versions]

[zopepy]
# installs a zopepy python interpreter that runs with your
# full Zope environment
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[omelette]
recipe=collective.recipe.omelette
eggs=${instance:eggs}

[templer]
recipe = zc.recipe.egg
eggs =
    PasteScript
    templer.core
    templer.zope
    templer.plone
    templer.dexterity
    ${instance:eggs}

entry-points = paster=paste.script.command:run

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/collective/behavior/textcaptcha

flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette,tests.py,xdebug.py,dataset.py,test_*.py

# flake8-ignore = flake8-debugger

flake8-max-complexity = 15
flake8-extensions =
    flake8-blind-except
    flake8-debugger
    flake8-coding

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/src/collective/behavior/textcaptcha'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']


[sources]
collective.behavior.shortidfromlongtitle = git git://tucuxi.univ-brest.fr/collective.behavior.shortidfromlongtitle.git rev=0.1
